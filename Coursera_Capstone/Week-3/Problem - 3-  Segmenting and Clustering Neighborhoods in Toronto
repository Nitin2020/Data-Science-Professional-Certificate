{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Question 3, Week - 3\n",
    "\n",
    "Import the libs and the output of Question 2 (Output file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df_outer = pd.read_csv(\"Write_Toronto_Neighborhood.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your credentails:\n",
      "CLIENT_ID: GD4UOIAZ1LDBPR2QB5CBI2UDUVXKNKFR42UIGAACGGHWCHPM\n",
      "CLIENT_SECRET:PRECZC3K3XYTE2LRWXPYDYWZS05TIMYJVKJMQLHK4XVZEGW3\n"
     ]
    }
   ],
   "source": [
    "CLIENT_ID = 'GD4UOIAZ1LDBPR2QB5CBI2UDUVXKNKFR42UIGAACGGHWCHPM' # your Foursquare ID\n",
    "CLIENT_SECRET = 'PRECZC3K3XYTE2LRWXPYDYWZS05TIMYJVKJMQLHK4XVZEGW3' # your Foursquare Secret\n",
    "VERSION = '20180604'\n",
    "LIMIT = 30\n",
    "print('Your credentails:')\n",
    "print('CLIENT_ID: ' + CLIENT_ID)\n",
    "print('CLIENT_SECRET:' + CLIENT_SECRET)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def getNearbyVenues(names, latitudes, longitudes, radius=500):\n",
    "    LIMIT = 100\n",
    "    venues_list=[]\n",
    "    for name, lat, lng in zip(names, latitudes, longitudes):\n",
    "        print(name)\n",
    "            \n",
    "        # create the API request URL\n",
    "        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n",
    "            CLIENT_ID, \n",
    "            CLIENT_SECRET, \n",
    "            VERSION, \n",
    "            lat, \n",
    "            lng, \n",
    "            radius, \n",
    "            LIMIT)\n",
    "            \n",
    "        # make the GET request\n",
    "        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n",
    "        \n",
    "        # return only relevant information for each nearby venue\n",
    "        venues_list.append([(\n",
    "            name, \n",
    "            lat, \n",
    "            lng, \n",
    "            v['venue']['name'], \n",
    "            v['venue']['location']['lat'], \n",
    "            v['venue']['location']['lng'],  \n",
    "            v['venue']['categories'][0]['name']) for v in results])\n",
    "\n",
    "    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n",
    "    nearby_venues.columns = ['Neighborhood', \n",
    "                  'Neighborhood Latitude', \n",
    "                  'Neighborhood Longitude', \n",
    "                  'Venue', \n",
    "                  'Venue Latitude', \n",
    "                  'Venue Longitude', \n",
    "                  'Venue Category']\n",
    "    \n",
    "    return(nearby_venues)\n",
    "\n",
    "# function that extracts the category of the venue\n",
    "def get_category_type(row):\n",
    "    try:\n",
    "        categories_list = row['categories']\n",
    "    except:\n",
    "        categories_list = row['venue.categories']\n",
    "        \n",
    "    if len(categories_list) == 0:\n",
    "        return None\n",
    "    else:\n",
    "        return categories_list[0]['name']\n",
    "\n",
    "def return_most_common_venues(row, num_top_venues):\n",
    "    row_categories = row.iloc[1:]\n",
    "    row_categories_sorted = row_categories.sort_values(ascending=False)\n",
    "    \n",
    "    return row_categories_sorted.index.values[0:num_top_venues]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Libraries imported.\n"
     ]
    }
   ],
   "source": [
    "import json # library to handle JSON files\n",
    "\n",
    "#!conda install -c conda-forge geopy --yes # uncomment this line if you haven't completed the Foursquare API lab\n",
    "from geopy.geocoders import Nominatim # convert an address into latitude and longitude values\n",
    "\n",
    "import requests # library to handle requests\n",
    "\n",
    "# Matplotlib and associated plotting modules\n",
    "import matplotlib.cm as cm\n",
    "import matplotlib.colors as colors\n",
    "\n",
    "# import k-means from clustering stage\n",
    "from sklearn.cluster import KMeans\n",
    "\n",
    "#!conda install -c conda-forge folium=0.5.0 --yes # uncomment this line if you haven't completed the Foursquare API lab\n",
    "import folium # map rendering library\n",
    "\n",
    "print('Libraries imported.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x7f5c9e1125f8>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#43.628841 \t-79.520999\n",
    "latitude = 43.628841\n",
    "longitude = -79.520999\n",
    "\n",
    "\n",
    "# create map of New York using latitude and longitude values\n",
    "map_toronto = folium.Map(location=[latitude, longitude], zoom_start=11)\n",
    "\n",
    "# add markers to map\n",
    "for lat, lng, borough, neighborhood in zip(df_outer['Latitude'], df_outer['Longitude'], df_outer['Borough'], df_outer['Neighborhood']):\n",
    "    label = '{}, {}'.format(neighborhood, borough)\n",
    "    label = folium.Popup(label, parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lng],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color='blue',\n",
    "        fill=True,\n",
    "        fill_color='#3186cc',\n",
    "        fill_opacity=0.7,\n",
    "        parse_html=False).add_to(map_toronto)  \n",
    "    \n",
    "map_toronto"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Harbourfront\n",
      "Queen's Park\n",
      "Ryerson, Garden District\n",
      "St. James Town\n",
      "The Beaches\n",
      "Berczy Park\n",
      "Central Bay Street\n",
      "Christie\n",
      "Adelaide, King, Richmond\n",
      "Dovercourt Village, Dufferin\n",
      "Harbourfront East, Toronto Islands, Union Station\n",
      "Little Portugal, Trinity\n",
      "The Danforth West, Riverdale\n",
      "Design Exchange, Toronto Dominion Centre\n",
      "Brockton, Exhibition Place, Parkdale Village\n",
      "The Beaches West, India Bazaar\n",
      "Commerce Court, Victoria Hotel\n",
      "Studio District\n",
      "Lawrence Park\n",
      "Roselawn\n",
      "Davisville North\n",
      "Forest Hill North, Forest Hill West\n",
      "High Park, The Junction South\n",
      "North Toronto West\n",
      "The Annex, North Midtown, Yorkville\n",
      "Parkdale, Roncesvalles\n",
      "Davisville\n",
      "Harbord, University of Toronto\n",
      "Runnymede, Swansea\n",
      "Moore Park, Summerhill East\n",
      "Chinatown, Grange Park, Kensington Market\n",
      "Deer Park, Forest Hill SE, Rathnelly, South Hill, Summerhill West\n",
      "CN Tower, Bathurst Quay, Island airport, Harbourfront West, King and Spadina, Railway Lands, South Niagara\n",
      "Rosedale\n",
      "Stn A PO Boxes 25 The Esplanade\n",
      "Cabbagetown, St. James Town\n",
      "First Canadian Place, Underground city\n",
      "Church and Wellesley\n",
      "Business Reply Mail Processing Centre 969 Eastern\n"
     ]
    }
   ],
   "source": [
    "toronto_data = df_outer.set_index('Borough').filter(regex=\".*Toronto\",axis=0)\n",
    "toronto_data.head()\n",
    "\n",
    "\n",
    "toronto_venues = getNearbyVenues(names=toronto_data['Neighborhood'],\n",
    "                                   latitudes=toronto_data['Latitude'],\n",
    "                                   longitudes=toronto_data['Longitude']\n",
    "                                  )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1680, 7)\n",
      "There are 234 uniques categories.\n"
     ]
    }
   ],
   "source": [
    "print(toronto_venues.shape)\n",
    "toronto_venues.head()\n",
    "toronto_venues.groupby('Neighborhood').count()\n",
    "print('There are {} uniques categories.'.format(len(toronto_venues['Venue Category'].unique())))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Yoga Studio</th>\n",
       "      <th>Afghan Restaurant</th>\n",
       "      <th>Airport</th>\n",
       "      <th>Airport Food Court</th>\n",
       "      <th>Airport Gate</th>\n",
       "      <th>Airport Lounge</th>\n",
       "      <th>Airport Service</th>\n",
       "      <th>Airport Terminal</th>\n",
       "      <th>American Restaurant</th>\n",
       "      <th>Antique Shop</th>\n",
       "      <th>...</th>\n",
       "      <th>Thrift / Vintage Store</th>\n",
       "      <th>Toy / Game Store</th>\n",
       "      <th>Trail</th>\n",
       "      <th>Train Station</th>\n",
       "      <th>Vegetarian / Vegan Restaurant</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Wine Bar</th>\n",
       "      <th>Wine Shop</th>\n",
       "      <th>Wings Joint</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 234 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Yoga Studio  Afghan Restaurant  Airport  Airport Food Court  Airport Gate  \\\n",
       "0            0                  0        0                   0             0   \n",
       "1            0                  0        0                   0             0   \n",
       "2            0                  0        0                   0             0   \n",
       "3            0                  0        0                   0             0   \n",
       "4            0                  0        0                   0             0   \n",
       "\n",
       "   Airport Lounge  Airport Service  Airport Terminal  American Restaurant  \\\n",
       "0               0                0                 0                    0   \n",
       "1               0                0                 0                    0   \n",
       "2               0                0                 0                    0   \n",
       "3               0                0                 0                    0   \n",
       "4               0                0                 0                    0   \n",
       "\n",
       "   Antique Shop  ...  Thrift / Vintage Store  Toy / Game Store  Trail  \\\n",
       "0             0  ...                       0                 0      0   \n",
       "1             0  ...                       0                 0      0   \n",
       "2             0  ...                       0                 0      0   \n",
       "3             0  ...                       0                 0      0   \n",
       "4             0  ...                       0                 0      0   \n",
       "\n",
       "   Train Station  Vegetarian / Vegan Restaurant  Video Game Store  \\\n",
       "0              0                              0                 0   \n",
       "1              0                              0                 0   \n",
       "2              0                              0                 0   \n",
       "3              0                              0                 0   \n",
       "4              0                              0                 0   \n",
       "\n",
       "   Vietnamese Restaurant  Wine Bar  Wine Shop  Wings Joint  \n",
       "0                      0         0          0            0  \n",
       "1                      0         0          0            0  \n",
       "2                      0         0          0            0  \n",
       "3                      0         0          0            0  \n",
       "4                      0         0          0            0  \n",
       "\n",
       "[5 rows x 234 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# one hot encoding\n",
    "toronto_onehot = pd.get_dummies(toronto_venues[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n",
    "\n",
    "# add neighborhood column back to dataframe\n",
    "toronto_onehot['Neighborhood'] = toronto_venues['Neighborhood'] \n",
    "\n",
    "# move neighborhood column to the first column\n",
    "fixed_columns = [toronto_onehot.columns[-1]] + list(toronto_onehot.columns[:-1])\n",
    "toronto_onehot = toronto_onehot[fixed_columns]\n",
    "\n",
    "toronto_onehot.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(38, 234)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "toronto_grouped = toronto_onehot.groupby('Neighborhood').mean().reset_index()\n",
    "toronto_grouped\n",
    "toronto_grouped.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "----Adelaide, King, Richmond----\n",
      "              venue  freq\n",
      "0       Coffee Shop  0.08\n",
      "1              Café  0.05\n",
      "2               Bar  0.04\n",
      "3        Steakhouse  0.04\n",
      "4  Asian Restaurant  0.03\n",
      "\n",
      "\n",
      "----Berczy Park----\n",
      "          venue  freq\n",
      "0   Coffee Shop  0.09\n",
      "1  Cocktail Bar  0.05\n",
      "2          Café  0.04\n",
      "3    Steakhouse  0.04\n",
      "4        Bakery  0.04\n",
      "\n",
      "\n",
      "----Brockton, Exhibition Place, Parkdale Village----\n",
      "                venue  freq\n",
      "0                Café  0.14\n",
      "1         Coffee Shop  0.09\n",
      "2      Breakfast Spot  0.09\n",
      "3       Burrito Place  0.05\n",
      "4  Italian Restaurant  0.05\n",
      "\n",
      "\n",
      "----Business Reply Mail Processing Centre 969 Eastern----\n",
      "                venue  freq\n",
      "0  Light Rail Station  0.11\n",
      "1         Yoga Studio  0.05\n",
      "2             Brewery  0.05\n",
      "3                 Spa  0.05\n",
      "4          Smoke Shop  0.05\n",
      "\n",
      "\n",
      "----CN Tower, Bathurst Quay, Island airport, Harbourfront West, King and Spadina, Railway Lands, South Niagara----\n",
      "              venue  freq\n",
      "0    Airport Lounge  0.12\n",
      "1   Airport Service  0.12\n",
      "2  Airport Terminal  0.12\n",
      "3  Sculpture Garden  0.06\n",
      "4               Bar  0.06\n",
      "\n",
      "\n",
      "----Cabbagetown, St. James Town----\n",
      "         venue  freq\n",
      "0         Café  0.07\n",
      "1  Pizza Place  0.07\n",
      "2  Coffee Shop  0.07\n",
      "3          Pub  0.04\n",
      "4       Bakery  0.04\n",
      "\n",
      "\n",
      "----Central Bay Street----\n",
      "                venue  freq\n",
      "0         Coffee Shop  0.14\n",
      "1  Italian Restaurant  0.06\n",
      "2      Ice Cream Shop  0.05\n",
      "3                Café  0.05\n",
      "4      Sandwich Place  0.04\n",
      "\n",
      "\n",
      "----Chinatown, Grange Park, Kensington Market----\n",
      "                           venue  freq\n",
      "0                           Café  0.05\n",
      "1          Vietnamese Restaurant  0.05\n",
      "2  Vegetarian / Vegan Restaurant  0.05\n",
      "3             Chinese Restaurant  0.05\n",
      "4            Dumpling Restaurant  0.04\n",
      "\n",
      "\n",
      "----Christie----\n",
      "           venue  freq\n",
      "0  Grocery Store  0.17\n",
      "1           Café  0.17\n",
      "2           Park  0.11\n",
      "3     Baby Store  0.06\n",
      "4          Diner  0.06\n",
      "\n",
      "\n",
      "----Church and Wellesley----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.07\n",
      "1  Japanese Restaurant  0.06\n",
      "2              Gay Bar  0.05\n",
      "3     Sushi Restaurant  0.05\n",
      "4           Restaurant  0.04\n",
      "\n",
      "\n",
      "----Commerce Court, Victoria Hotel----\n",
      "                venue  freq\n",
      "0         Coffee Shop  0.11\n",
      "1                Café  0.07\n",
      "2               Hotel  0.05\n",
      "3          Restaurant  0.05\n",
      "4  Seafood Restaurant  0.03\n",
      "\n",
      "\n",
      "----Davisville----\n",
      "                venue  freq\n",
      "0        Dessert Shop  0.12\n",
      "1      Sandwich Place  0.09\n",
      "2  Italian Restaurant  0.06\n",
      "3                Café  0.06\n",
      "4         Pizza Place  0.06\n",
      "\n",
      "\n",
      "----Davisville North----\n",
      "               venue  freq\n",
      "0  Convenience Store  0.12\n",
      "1               Park  0.12\n",
      "2     Clothing Store  0.12\n",
      "3  Food & Drink Shop  0.12\n",
      "4              Hotel  0.12\n",
      "\n",
      "\n",
      "----Deer Park, Forest Hill SE, Rathnelly, South Hill, Summerhill West----\n",
      "                venue  freq\n",
      "0                 Pub  0.13\n",
      "1         Coffee Shop  0.13\n",
      "2  Light Rail Station  0.07\n",
      "3        Liquor Store  0.07\n",
      "4          Sports Bar  0.07\n",
      "\n",
      "\n",
      "----Design Exchange, Toronto Dominion Centre----\n",
      "         venue  freq\n",
      "0  Coffee Shop  0.12\n",
      "1         Café  0.08\n",
      "2        Hotel  0.05\n",
      "3   Restaurant  0.05\n",
      "4       Bakery  0.04\n",
      "\n",
      "\n",
      "----Dovercourt Village, Dufferin----\n",
      "                  venue  freq\n",
      "0                Bakery  0.12\n",
      "1              Pharmacy  0.12\n",
      "2           Supermarket  0.12\n",
      "3  Gym / Fitness Center  0.06\n",
      "4                  Park  0.06\n",
      "\n",
      "\n",
      "----First Canadian Place, Underground city----\n",
      "         venue  freq\n",
      "0  Coffee Shop  0.11\n",
      "1         Café  0.07\n",
      "2          Gym  0.04\n",
      "3   Restaurant  0.04\n",
      "4   Steakhouse  0.04\n",
      "\n",
      "\n",
      "----Forest Hill North, Forest Hill West----\n",
      "              venue  freq\n",
      "0              Park  0.25\n",
      "1             Trail  0.25\n",
      "2     Jewelry Store  0.25\n",
      "3  Sushi Restaurant  0.25\n",
      "4       Yoga Studio  0.00\n",
      "\n",
      "\n",
      "----Harbord, University of Toronto----\n",
      "                venue  freq\n",
      "0                Café  0.14\n",
      "1  Italian Restaurant  0.06\n",
      "2           Bookstore  0.06\n",
      "3      Sandwich Place  0.06\n",
      "4                 Bar  0.06\n",
      "\n",
      "\n",
      "----Harbourfront----\n",
      "            venue  freq\n",
      "0     Coffee Shop  0.17\n",
      "1             Pub  0.06\n",
      "2          Bakery  0.06\n",
      "3            Park  0.06\n",
      "4  Breakfast Spot  0.04\n",
      "\n",
      "\n",
      "----Harbourfront East, Toronto Islands, Union Station----\n",
      "                venue  freq\n",
      "0         Coffee Shop  0.13\n",
      "1            Aquarium  0.05\n",
      "2                Café  0.04\n",
      "3               Hotel  0.04\n",
      "4  Italian Restaurant  0.04\n",
      "\n",
      "\n",
      "----High Park, The Junction South----\n",
      "                venue  freq\n",
      "0                 Bar  0.09\n",
      "1  Mexican Restaurant  0.09\n",
      "2                Café  0.09\n",
      "3     Thai Restaurant  0.09\n",
      "4              Bakery  0.04\n",
      "\n",
      "\n",
      "----Lawrence Park----\n",
      "                  venue  freq\n",
      "0  Gym / Fitness Center  0.25\n",
      "1                  Park  0.25\n",
      "2           Swim School  0.25\n",
      "3              Bus Line  0.25\n",
      "4   Monument / Landmark  0.00\n",
      "\n",
      "\n",
      "----Little Portugal, Trinity----\n",
      "                   venue  freq\n",
      "0                    Bar  0.13\n",
      "1       Asian Restaurant  0.06\n",
      "2             Restaurant  0.06\n",
      "3            Coffee Shop  0.06\n",
      "4  Vietnamese Restaurant  0.04\n",
      "\n",
      "\n",
      "----Moore Park, Summerhill East----\n",
      "           venue  freq\n",
      "0     Playground  0.25\n",
      "1            Gym  0.25\n",
      "2     Restaurant  0.25\n",
      "3   Tennis Court  0.25\n",
      "4  Movie Theater  0.00\n",
      "\n",
      "\n",
      "----North Toronto West----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.11\n",
      "1  Sporting Goods Shop  0.11\n",
      "2          Yoga Studio  0.06\n",
      "3           Bagel Shop  0.06\n",
      "4                 Park  0.06\n",
      "\n",
      "\n",
      "----Parkdale, Roncesvalles----\n",
      "           venue  freq\n",
      "0      Gift Shop  0.15\n",
      "1      Bookstore  0.08\n",
      "2    Coffee Shop  0.08\n",
      "3  Movie Theater  0.08\n",
      "4            Bar  0.08\n",
      "\n",
      "\n",
      "----Rosedale----\n",
      "              venue  freq\n",
      "0              Park  0.50\n",
      "1        Playground  0.25\n",
      "2             Trail  0.25\n",
      "3     Movie Theater  0.00\n",
      "4  Malay Restaurant  0.00\n",
      "\n",
      "\n",
      "----Roselawn----\n",
      "               venue  freq\n",
      "0             Garden   1.0\n",
      "1             Museum   0.0\n",
      "2   Malay Restaurant   0.0\n",
      "3             Market   0.0\n",
      "4  Martial Arts Dojo   0.0\n",
      "\n",
      "\n",
      "----Runnymede, Swansea----\n",
      "                venue  freq\n",
      "0                Café  0.08\n",
      "1         Coffee Shop  0.08\n",
      "2    Sushi Restaurant  0.05\n",
      "3  Italian Restaurant  0.05\n",
      "4         Pizza Place  0.05\n",
      "\n",
      "\n",
      "----Ryerson, Garden District----\n",
      "                       venue  freq\n",
      "0                Coffee Shop  0.08\n",
      "1             Clothing Store  0.07\n",
      "2             Cosmetics Shop  0.04\n",
      "3  Middle Eastern Restaurant  0.03\n",
      "4                       Café  0.03\n",
      "\n",
      "\n",
      "----St. James Town----\n",
      "            venue  freq\n",
      "0            Café  0.06\n",
      "1     Coffee Shop  0.06\n",
      "2      Restaurant  0.05\n",
      "3           Hotel  0.04\n",
      "4  Clothing Store  0.04\n",
      "\n",
      "\n",
      "----Stn A PO Boxes 25 The Esplanade----\n",
      "                 venue  freq\n",
      "0          Coffee Shop  0.11\n",
      "1                 Café  0.04\n",
      "2           Restaurant  0.04\n",
      "3   Italian Restaurant  0.03\n",
      "4  Japanese Restaurant  0.03\n",
      "\n",
      "\n",
      "----Studio District----\n",
      "                 venue  freq\n",
      "0                 Café  0.10\n",
      "1          Coffee Shop  0.07\n",
      "2  American Restaurant  0.05\n",
      "3               Bakery  0.05\n",
      "4   Italian Restaurant  0.05\n",
      "\n",
      "\n",
      "----The Annex, North Midtown, Yorkville----\n",
      "               venue  freq\n",
      "0     Sandwich Place  0.14\n",
      "1               Café  0.14\n",
      "2        Coffee Shop  0.09\n",
      "3     History Museum  0.05\n",
      "4  Indian Restaurant  0.05\n",
      "\n",
      "\n",
      "----The Beaches----\n",
      "                       venue  freq\n",
      "0                      Trail   0.2\n",
      "1          Health Food Store   0.2\n",
      "2           Asian Restaurant   0.2\n",
      "3                        Pub   0.2\n",
      "4  Middle Eastern Restaurant   0.0\n",
      "\n",
      "\n",
      "----The Beaches West, India Bazaar----\n",
      "               venue  freq\n",
      "0               Park  0.12\n",
      "1          Pet Store  0.06\n",
      "2            Brewery  0.06\n",
      "3  Fish & Chips Shop  0.06\n",
      "4       Burger Joint  0.06\n",
      "\n",
      "\n",
      "----The Danforth West, Riverdale----\n",
      "                    venue  freq\n",
      "0        Greek Restaurant  0.21\n",
      "1             Coffee Shop  0.10\n",
      "2          Ice Cream Shop  0.07\n",
      "3  Furniture / Home Store  0.05\n",
      "4      Italian Restaurant  0.05\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "num_top_venues = 5\n",
    "\n",
    "for hood in toronto_grouped['Neighborhood']:\n",
    "    print(\"----\"+hood+\"----\")\n",
    "    temp = toronto_grouped[toronto_grouped['Neighborhood'] == hood].T.reset_index()\n",
    "    temp.columns = ['venue','freq']\n",
    "    temp = temp.iloc[1:]\n",
    "    temp['freq'] = temp['freq'].astype(float)\n",
    "    temp = temp.round({'freq': 2})\n",
    "    print(temp.sort_values('freq', ascending=False).reset_index(drop=True).head(num_top_venues))\n",
    "    print('\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Adelaide, King, Richmond</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Café</td>\n",
       "      <td>Steakhouse</td>\n",
       "      <td>Bar</td>\n",
       "      <td>Thai Restaurant</td>\n",
       "      <td>Salad Place</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Sushi Restaurant</td>\n",
       "      <td>Asian Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Berczy Park</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Cocktail Bar</td>\n",
       "      <td>Cheese Shop</td>\n",
       "      <td>Steakhouse</td>\n",
       "      <td>Beer Bar</td>\n",
       "      <td>Farmers Market</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Café</td>\n",
       "      <td>Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Brockton, Exhibition Place, Parkdale Village</td>\n",
       "      <td>Café</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Breakfast Spot</td>\n",
       "      <td>Pet Store</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Nightclub</td>\n",
       "      <td>Performing Arts Venue</td>\n",
       "      <td>Climbing Gym</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Burrito Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Business Reply Mail Processing Centre 969 Eastern</td>\n",
       "      <td>Light Rail Station</td>\n",
       "      <td>Gym / Fitness Center</td>\n",
       "      <td>Garden Center</td>\n",
       "      <td>Skate Park</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Recording Studio</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Park</td>\n",
       "      <td>Garden</td>\n",
       "      <td>Spa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CN Tower, Bathurst Quay, Island airport, Harbo...</td>\n",
       "      <td>Airport Terminal</td>\n",
       "      <td>Airport Lounge</td>\n",
       "      <td>Airport Service</td>\n",
       "      <td>Boutique</td>\n",
       "      <td>Rental Car Location</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Boat or Ferry</td>\n",
       "      <td>Harbor / Marina</td>\n",
       "      <td>Bar</td>\n",
       "      <td>Airport Gate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                        Neighborhood 1st Most Common Venue  \\\n",
       "0                           Adelaide, King, Richmond           Coffee Shop   \n",
       "1                                        Berczy Park           Coffee Shop   \n",
       "2       Brockton, Exhibition Place, Parkdale Village                  Café   \n",
       "3  Business Reply Mail Processing Centre 969 Eastern    Light Rail Station   \n",
       "4  CN Tower, Bathurst Quay, Island airport, Harbo...      Airport Terminal   \n",
       "\n",
       "  2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue  \\\n",
       "0                  Café            Steakhouse                   Bar   \n",
       "1          Cocktail Bar           Cheese Shop            Steakhouse   \n",
       "2           Coffee Shop        Breakfast Spot             Pet Store   \n",
       "3  Gym / Fitness Center         Garden Center            Skate Park   \n",
       "4        Airport Lounge       Airport Service              Boutique   \n",
       "\n",
       "  5th Most Common Venue 6th Most Common Venue  7th Most Common Venue  \\\n",
       "0       Thai Restaurant           Salad Place           Burger Joint   \n",
       "1              Beer Bar        Farmers Market     Seafood Restaurant   \n",
       "2                Bakery             Nightclub  Performing Arts Venue   \n",
       "3            Restaurant      Recording Studio            Pizza Place   \n",
       "4   Rental Car Location           Coffee Shop          Boat or Ferry   \n",
       "\n",
       "  8th Most Common Venue 9th Most Common Venue 10th Most Common Venue  \n",
       "0                Bakery      Sushi Restaurant       Asian Restaurant  \n",
       "1                Bakery                  Café             Restaurant  \n",
       "2          Climbing Gym            Restaurant          Burrito Place  \n",
       "3                  Park                Garden                    Spa  \n",
       "4       Harbor / Marina                   Bar           Airport Gate  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_top_venues = 10\n",
    "\n",
    "indicators = ['st', 'nd', 'rd']\n",
    "\n",
    "# create columns according to number of top venues\n",
    "columns = ['Neighborhood']\n",
    "for ind in np.arange(num_top_venues):\n",
    "    try:\n",
    "        columns.append('{}{} Most Common Venue'.format(ind+1, indicators[ind]))\n",
    "    except:\n",
    "        columns.append('{}th Most Common Venue'.format(ind+1))\n",
    "\n",
    "# create a new dataframe\n",
    "neighborhoods_venues_sorted = pd.DataFrame(columns=columns)\n",
    "neighborhoods_venues_sorted['Neighborhood'] = toronto_grouped['Neighborhood']\n",
    "\n",
    "for ind in np.arange(toronto_grouped.shape[0]):\n",
    "    neighborhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(toronto_grouped.iloc[ind, :], num_top_venues)\n",
    "\n",
    "neighborhoods_venues_sorted.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Borough</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Downtown Toronto</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Harbourfront</td>\n",
       "      <td>43.654260</td>\n",
       "      <td>-79.360636</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Pub</td>\n",
       "      <td>Park</td>\n",
       "      <td>Mexican Restaurant</td>\n",
       "      <td>Breakfast Spot</td>\n",
       "      <td>Café</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Shoe Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Downtown Toronto</th>\n",
       "      <td>M9A</td>\n",
       "      <td>Queen's Park</td>\n",
       "      <td>43.667856</td>\n",
       "      <td>-79.532242</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Downtown Toronto</th>\n",
       "      <td>M5B</td>\n",
       "      <td>Ryerson, Garden District</td>\n",
       "      <td>43.657162</td>\n",
       "      <td>-79.378937</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Middle Eastern Restaurant</td>\n",
       "      <td>Café</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Lingerie Store</td>\n",
       "      <td>Bubble Tea Shop</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Downtown Toronto</th>\n",
       "      <td>M5C</td>\n",
       "      <td>St. James Town</td>\n",
       "      <td>43.651494</td>\n",
       "      <td>-79.375418</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Café</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Hotel</td>\n",
       "      <td>Diner</td>\n",
       "      <td>Breakfast Spot</td>\n",
       "      <td>Beer Bar</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Bakery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>East Toronto</th>\n",
       "      <td>M4E</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>43.676357</td>\n",
       "      <td>-79.293031</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Asian Restaurant</td>\n",
       "      <td>Pub</td>\n",
       "      <td>Health Food Store</td>\n",
       "      <td>Trail</td>\n",
       "      <td>Diner</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Dog Run</td>\n",
       "      <td>Doner Restaurant</td>\n",
       "      <td>Donut Shop</td>\n",
       "      <td>Eastern European Restaurant</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Postcode              Neighborhood   Latitude  Longitude  \\\n",
       "Borough                                                                     \n",
       "Downtown Toronto      M5A              Harbourfront  43.654260 -79.360636   \n",
       "Downtown Toronto      M9A              Queen's Park  43.667856 -79.532242   \n",
       "Downtown Toronto      M5B  Ryerson, Garden District  43.657162 -79.378937   \n",
       "Downtown Toronto      M5C            St. James Town  43.651494 -79.375418   \n",
       "East Toronto          M4E               The Beaches  43.676357 -79.293031   \n",
       "\n",
       "                  Cluster Labels 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "Borough                                                                        \n",
       "Downtown Toronto             0.0           Coffee Shop                Bakery   \n",
       "Downtown Toronto             NaN                   NaN                   NaN   \n",
       "Downtown Toronto             0.0           Coffee Shop        Clothing Store   \n",
       "Downtown Toronto             0.0                  Café           Coffee Shop   \n",
       "East Toronto                 3.0      Asian Restaurant                   Pub   \n",
       "\n",
       "                 3rd Most Common Venue      4th Most Common Venue  \\\n",
       "Borough                                                             \n",
       "Downtown Toronto                   Pub                       Park   \n",
       "Downtown Toronto                   NaN                        NaN   \n",
       "Downtown Toronto        Cosmetics Shop  Middle Eastern Restaurant   \n",
       "Downtown Toronto            Restaurant             Clothing Store   \n",
       "East Toronto         Health Food Store                      Trail   \n",
       "\n",
       "                 5th Most Common Venue 6th Most Common Venue  \\\n",
       "Borough                                                        \n",
       "Downtown Toronto    Mexican Restaurant        Breakfast Spot   \n",
       "Downtown Toronto                   NaN                   NaN   \n",
       "Downtown Toronto                  Café            Restaurant   \n",
       "Downtown Toronto                 Hotel                 Diner   \n",
       "East Toronto                     Diner        Discount Store   \n",
       "\n",
       "                 7th Most Common Venue 8th Most Common Venue  \\\n",
       "Borough                                                        \n",
       "Downtown Toronto                  Café            Restaurant   \n",
       "Downtown Toronto                   NaN                   NaN   \n",
       "Downtown Toronto  Fast Food Restaurant        Lingerie Store   \n",
       "Downtown Toronto        Breakfast Spot              Beer Bar   \n",
       "East Toronto                   Dog Run      Doner Restaurant   \n",
       "\n",
       "                 9th Most Common Venue       10th Most Common Venue  \n",
       "Borough                                                              \n",
       "Downtown Toronto        Cosmetics Shop                   Shoe Store  \n",
       "Downtown Toronto                   NaN                          NaN  \n",
       "Downtown Toronto       Bubble Tea Shop                  Pizza Place  \n",
       "Downtown Toronto        Cosmetics Shop                       Bakery  \n",
       "East Toronto                Donut Shop  Eastern European Restaurant  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# set number of clusters\n",
    "kclusters = 5\n",
    "\n",
    "toronto_grouped_clustering = toronto_grouped.drop('Neighborhood', 1)\n",
    "\n",
    "# run k-means clustering\n",
    "kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(toronto_grouped_clustering)\n",
    "\n",
    "# check cluster labels generated for each row in the dataframe\n",
    "kmeans.labels_[0:10] \n",
    "\n",
    "\n",
    "\n",
    "# add clustering labels\n",
    "neighborhoods_venues_sorted.insert(0, 'Cluster Labels', kmeans.labels_)\n",
    "\n",
    "toronto_merged = toronto_data\n",
    "\n",
    "# merge toronto_grouped with toronto_data to add latitude/longitude for each neighborhood\n",
    "toronto_merged = toronto_merged.join(neighborhoods_venues_sorted.set_index('Neighborhood'), on='Neighborhood')\n",
    "\n",
    "toronto_merged.head() # check the last columns!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# create map\n",
    "latitude = 43.654260\n",
    "longitude = -79.520999\n",
    "\n",
    "map_clusters = folium.Map(location=[latitude, longitude], zoom_start=12)\n",
    "\n",
    "# set color scheme for the clusters\n",
    "x = np.arange(kclusters)\n",
    "ys = [i + x + (i*x)**2 for i in range(kclusters)]\n",
    "colors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\n",
    "rainbow = [colors.rgb2hex(i) for i in colors_array]\n",
    "\n",
    "# add markers to the map\n",
    "markers_colors = []\n",
    "for lat, lon, poi, cluster in zip(toronto_merged['Latitude'], toronto_merged['Longitude'], toronto_merged['Neighborhood'], toronto_merged['Cluster Labels']):\n",
    "    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lon],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color=rainbow[cluster-1],\n",
    "        fill=True,\n",
    "        fill_color=rainbow[cluster-1],\n",
    "        fill_opacity=0.7).add_to(map_clusters)\n",
    "       \n",
    "map_clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python",
   "language": "python",
   "name": "conda-env-python-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
